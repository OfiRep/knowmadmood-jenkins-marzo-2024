@Library('knowmadmood-shared-library')

import main.groovy.com.knowmadmood.ejb.KnowMadMoodEJB

def decodedOriginFile = ""
def decodedDestinationFile = ""
def decodedCpuCores = ""
def decodedCompressType = ""

pipeline {
    agent {
        label 'minion2'
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '7',
                                  daysToKeepStr: '10'))
        timestamps()
    }

    parameters {
        choice(name: 'PARAMETERS_IN_BASE64', choices: ['No', 'Yes'], description: 'Indicación si los parámetros vienen en Base64')
        string(name: 'ORIGIN_FILE', defaultValue: '/home/jenkins/myfile', description: 'El nombre del archivo de origen a comprimir.', trim: true)
        string(name: 'DESTINATION_FILE', defaultValue: '/home/jenkins/myfile.7z', description: 'El nombre del archivo comprimido que quieres tener.', trim: true)
        string(name: 'CPU_CORES', defaultValue: '2', description: 'El número de núcleos de CPU que se usarán para el proceso de compresión.', trim: true)
        choice(name: 'COMPRESS_TYPE', choices: ['Fastest', 'Fast', 'Normal', 'Maximum', 'Ultra'], description: 'Selecciona el nivel de compresión deseado.')
    }

    stages {
        stage ('Clean WorkSpace') {
            steps {
                cleanWs()
            }
        }

        stage ('DEBUG -> Base64 Encoded') {
            steps {
                println "PARAMETERS_IN_BASE64" + "$PARAMETERS_IN_BASE64"
                println "ORIGIN_FILE: " + "$ORIGIN_FILE"
                println "DESTINATION_FILE: " + "$DESTINATION_FILE"
                println "CPU_CORES: " + "$CPU_CORES"
                println "COMPRESS_TYPE: " + "$COMPRESS_TYPE"
            }
        }

        stage ('Decode From Base64') {
            steps {
                script {
                    if ("$PARAMETERS_IN_BASE64" == "Yes") {
                        decodedOriginFile = KnowMadMoodEJB.decodeBase64("$ORIGIN_FILE")
                        decodedDestinationFile = KnowMadMoodEJB.decodeBase64("$DESTINATION_FILE")
                        decodedCpuCores = KnowMadMoodEJB.decodeBase64("$CPU_CORES")
                        decodedCompressType = KnowMadMoodEJB.decodeBase64("$COMPRESS_TYPE")
                    } else {
                        decodedOriginFile = "$ORIGIN_FILE"
                        decodedDestinationFile = "$DESTINATION_FILE"
                        decodedCpuCores = "$CPU_CORES"
                        decodedCompressType = "$COMPRESS_TYPE"
                    }
                }
            }
        }

        stage ('DEBUG -> Base64 Decoded') {
            steps {
                println "PARAMETERS_IN_BASE64" + "$PARAMETERS_IN_BASE64"
                println "ORIGIN_FILE: " + decodedOriginFile
                println "DESTINATION_FILE: " + decodedDestinationFile
                println "CPU_CORES: " + decodedCpuCores
                println "COMPRESS_TYPE: " + decodedCompressType
            }
        }

    }

    post {
        always {
            chuckNorris()
        }
    }
}


/*7za a -r -mmt2 /home/jenkins/projects/development-pipeline/ofirep-zip-file/Jenkinsfile.7z /home/jenkins/projects/development-pipeline/ofirep-zip-file/Jenkinsfile -mx9*/

//localhost:8081/job/ofirep-zip-file/buildWithParameters?token=mySecretPassword&PARAMETERS_IN_BASE64=Yes&ORIGIN_FILE=cHJ1ZWJhY2FkZW5hZW5iYXNlNjQ=&DESTINATION_FILE=cHJ1ZWJhY2FkZW5hZW5iYXNlNjQ=&CPU_CORES=cHJ1ZWJhY2FkZW5hZW5iYXNlNjQ=&COMPRESS_TYPE=VWx0cmE=

//HTTP ->
///Header
//    Authorization Basic email:token

//Token: 11e515f0895743b30fc2e824d8a77b1256

//Authorization Basic m.tomas.ortega@gmail.com:11e515f0895743b30fc2e824d8a77b1256

//Authorization Basic  bS50b21hcy5vcnRlZ2FAZ21haWwuY29tOjExZTUxNWYwODk1NzQzYjMwZmMyZTgyNGQ4YTc3YjEyNTY=

/*Con el email de usuario*/
//curl -X POST -H "Authorization: Basic  bS50b21hcy5vcnRlZ2FAZ21haWwuY29tOjExZTUxNWYwODk1NzQzYjMwZmMyZTgyNGQ4YTc3YjEyNTY=" localhost:8081/job/ofirep-zip-file/buildWithParameters?token=mySecretPassword

/*Con el nombre del usuario en sí*/
//curl --user admin:admin localhost:8081/job/ofirep-zip-file/buildWithParameters?token=mySecretPassword


//1º) Obtengo un jenkins crumb (usuario:clave o token)
//curl --user admin:11e515f0895743b30fc2e824d8a77b1256 \
//    localhost:8081/crumbIssuer/api/xml?xpath=concat\(//crumbRequestField,%22:%22,//crumb\))

//2º) Obtengo esta cabecera http y ese key:value
//Jenkins-Crumb:5194d5cb1fb026d633421271376ab067b48f2070f2ab977635b6499e241be6f9    

//3º) Invocamos al jenkins por POST, estando autentificados por el usuario --user (usuario:token)
//curl -X POST -H "Jenkins-Crumb:5194d5cb1fb026d633421271376ab067b48f2070f2ab977635b6499e241be6f9 " --user admin:11e515f0895743b30fc2e824d8a77b1256 localhost:8081/job/ofirep-zip-file/buildWithParameters?token=mySecretPassword&PARAMETERS_IN_BASE64=Yes&ORIGIN_FILE=cHJ1ZWJhY2FkZW5hZW5iYXNlNjQ=&DESTINATION_FILE=cHJ1ZWJhY2FkZW5hZW5iYXNlNjQ=&CPU_CORES=cHJ1ZWJhY2FkZW5hZW5iYXNlNjQ=&COMPRESS_TYPE=VWx0cmE=