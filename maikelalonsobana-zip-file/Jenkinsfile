@Library('knowmadmood-shared-library')

import main.groovy.com.knowmadmood.ejb.knowmadMoodEJB

def decodedOriginFile = ""
def decodedDestinationFile = ""
def decodedCpuCores = ""
def decodedCompressType = ""

pipeline {
    agent { 
        label 'minion2'
    }
     options { 
        buildDiscarder(logRotator(numToKeepStr: '7', daysToKeepStr: '10'))
        timestamps()
    }

    parameters {
        choice (name: 'PARAMETERS_IN_BASE4', choices: ['No', 'Yes'], description: 'Indicar si los parámetros vienen en base64')
        string (name: 'SOURCE_PATH', description: 'Ruta del archivo a comprimir', trim: true, defaultValue: '/home/jenkins/projects/development-pipeline/maikelalonsobana-zip-file/myFile')
        string (name: 'TARGET_PATH', description: 'Ruta de destino del archivo comprimido', trim: true, defaultValue: '/home/jenkins/projects/development-pipeline/maikelalonsobana-zip-file/myFile.7z')
        string (name: 'NUMBER_OF_CORES', description: 'Número de núcleos a utilizar para comprimir', trim: true, defaultValue: '2')
        choice (name: 'COMPRESSION_LEVEL', description: 'Selecciona el nivel de compresión deseado', choices: ['Fastest','Fast','Normal','Maximum','Ultra'])
    }
    stages {
        stage('Clean workspace') {
            steps {
                println "Deleting workspace..."
                cleanWs()
            }
        }
        stage ('DEBUG => Base64 Encoded') {
            steps {
                println "PARAMETERS_IN_BASE64: " + "$PARAMETERS_IN_BASE64"
                println "SOURCE_PATH: " + "$SOURCE_PATH"
                println "TARGET_PATH: " + "$TARGET_PATH"
                println "NUMBER_OF CORES: " + "$NUMBER_OF_CORES"
                println "COMPRESSION_LEVEL: " + "$COMPRESSION_LEVEL"
                /* 7za a -r -mmt2 /home/jenkins/projects/development-pipeline/maikelalonsobana-zip-file/Jenkinsfile.7z /home/jenkins/projects/development-pipeline/maikelalonsobana-zip-file/Jenkinsfile -mx9 */
            }            
        }

        stage ('Decode From Base64') {
            steps {
                echo "PARAMETERS_IN_BASE64: $PARAMETERS_IN_BASE64"
                script {
                    if ("$PARAMETERS_IN_BASE64" == "Yes") {
                        decodedOriginFile = KnowmadmoodEJB.decodeBase64("$SOURCE_PATH")
                        decodedDestinationFile = KnowmadmoodEJB.decodeBase64("$TARGET_PATH")
                        decodedCpuCores = KnowmadmoodEJB.decodeBase64("$NUMBER_OF_CORES")
                        decodedCompressType = KnowmadmoodEJB.decodeBase64("$COMPRESSION_LEVEL")

                    } else {
                        decodedOriginFile = "$SOURCE_PATH"
                        decodedDestinationFile = "$TARGET_PATH"
                        decodedCpuCores = "$NUMBER_OF_CORES"
                        decodedCompressType = "$COMPRESSION_LEVEL"
                    }
                }
            }
        }

        stage ('DEBUG => Base64 Decoded') {
            steps {
                println "PARAMETERS_IN_BASE64: " + "$PARAMETERS_IN_BASE64"
                println "SOURCE_PATH: " + decodedOriginFile
                println "TARGET_PATH: " + decodedDestinationFile
                println "NUMBER_OF CORES: " + decodedCpuCores
                println "COMPRESSION_LEVEL: " + "$COMPRESSION_LEVEL"                
            }            
        }


    }

    // 
    post {
        always {
            // se ejecuta siempre en esta fase de post
            chuckNorris()
        }
    }
}
/* 7za a -r -mmt2 /home/jenkins/projects/development-pipeline/maikelalonsobana-zip-file/Jenkinsfile.7z /home/jenkins/projects/development-pipeline/maikelalonsobana-zip-file/Jenkinsfile -mx9 */

// localhost:8081/job/maikelalonsobana-zip-file/buildWithParameters?token=mySecretPassword&PARAMETERS_IN_BASE64=cHJ1ZWJhY2FkZW5hZW5iYXNlNjQ=&decodedOriginFile=cHJ1ZWJhY2FkZW5hZW5iYXNlNjQ=&decodedDestinationFile=cHJ1ZWJhY2FkZW5hZW5iYXNlNjQ=&decodedCpuCores=cHJ1ZWJhY2FkZW5hZW5iYXNlNjQ=&COMPRESSION_LEVEL=VWx0cmE=

// YWRtaW46YWRtaW4=